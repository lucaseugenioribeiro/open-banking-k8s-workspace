apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/my-networks: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
            - name: RABBITMQ_DEFAULT_USER
              value: guest
          image: rabbitmq:3-management
          name: rabbitmq-management
          ports:
            - containerPort: 25672
            - containerPort: 15672
            - containerPort: 5672
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/
              name: rabbitmq-claim0
      restartPolicy: Always
      volumes:
        - name: rabbitmq-claim0
          persistentVolumeClaim:
            claimName: rabbitmq-claim0
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "25672"
      port: 25672
      targetPort: 25672
    - name: "15673"
      port: 15673
      targetPort: 15672
    - name: "5672"
      port: 5672
      targetPort: 5672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: rabbitmq-claim0
  name: rabbitmq-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
